template:
  id: synopsis-template-v1
  name: Conceptual Sketch Synopsis
  version: 1.0
  output:
    format: markdown
    filename: docs/pages/{{page_id}}-{{page_name}}/[page_id]-{{page_name}}_Synopsis.txt
    title: "Synopsis: {{page_name}}"

workflow:
  mode: interactive
  elicitation: advanced-elicitation

sections:
  - id: sketch-image
    title: Sketch
    instruction: |
      Include a link to the corresponding sketch image using proper relative paths.
      Use descriptive, generic names that reflect component purpose (not page-specific).
      For component sketches, place in component folders for better organization.
      example: ![Location Prompt Popup - Desktop](location-prompt-popup_desktop_concept.jpg)

  - id: sketch-context
    title: Sketch Context
    instruction: |
      Provide a brief description of the user's current situation in the scenario.
      Describe what the page is going to accomplish in the overall value-adding process.
      Reference established project context from:
      - Project brief (business goals, language requirements, platform focus)
      - Trigger map (persona goals, driving forces)
      - Existing scenarios (established patterns and approaches)
      - Component library (reusable elements and naming conventions)

  - id: page-structure
    title: Page Structure
    instruction: |
      Create a hierarchical bullet list for each section, component, and piece of content on the page.
      This structure should describe the page from a top-down perspective.

  - id: referenced-components
    title: Referenced Components
    instruction: |
      List all reusable components from the central library that are used on this page.
      Follow the established link-first documentation pattern:
      
      Format: "#### → [Component Name](path/to/component.md)"
      Follow with: **State**, **Purpose**, **Features**, etc.
      
      Use the component folder structure: `docs/D. Components/[type]/[category]/[component-name]/[component-name].md`
      Apply the "Component Rule": elements appearing twice become documented components with generic names.
      
      Example:
      ```
      #### → [Site Header Component](../../D. Components/organism/navigation/site-header/site-header.md)
      **State**: Location Page variant
      **Purpose**: Primary navigation with location awareness
      ```

  - id: interactions-and-effects
    title: Interactions and Effects
    instruction: |
      Describe any interactive parts, animations, or visual effects that will enrich the user experience.

  - id: content-and-assets
    title: Content and Assets
    instruction: |
      Describe the headlines, body text, and any other fixed text with specific examples.
      Ensure multi-line content matches the sketch's intended length and structure.
      Provide context-appropriate messaging that explains platform concepts clearly.
      For images and videos, provide a description of their purpose and content.
      Include multi-language content as specified in initial project context, formatted consistently.

  - id: open-questions
    title: Open Questions & Missing Information
    instruction: |
      Document any parts of the sketch that were purposefully left undefined.
      This section is for parts of the design that require further client confirmation or research.